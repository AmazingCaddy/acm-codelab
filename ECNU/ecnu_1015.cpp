//  本题是典型的组合计数问题，且数据量较大，所以应使用组合数学的算法实现。
//  运用升格思想，设N个坑不会发生爆炸的组合数为F(n)。假设已知F(n)以前的放置方案，
//  在n-1个坑的左边再加一个坑得n个坑。则第n个坑的放置方案有以下情况：
// （为便于叙述，我们把放入核物质称为1，未放入称为0，则n个坑的状态表示为二进制数）
//　1、 当该坑右边已有连续m-1个核物质时（即形如111…1110*），则该坑只能不放核物质，
//      否则将发生爆炸。因为前m个状态已确定，此种情况总数为F(n-1-m)
//　2、 对于剩下的情况，新加入的第n个坑可以为1，也可为0。此种情况总数为2*[F(n-1)-F(n-1-m)]。
//  总数为  ans=2*F(n-1)-F(n-1-m)

#include<iostream>
#define MAXN 52
using namespace std;
int main( )
{
	__int64 a[MAXN];
	int n,m,i;
	while( scanf("%d%d",&n,&m) != EOF )
	{
		a[0]=1;
		for( i=1; i<=m-1; i++ )
			a[i]=a[i-1]<<1;
		a[m]=(a[m-1]<<1)-1;
		for( i=m+1; i<=n; i++ )
			a[i]=(a[i-1]<<1)-a[i-1-m];
		printf("%I64d\n",a[n]);
	}
	return 0;
}