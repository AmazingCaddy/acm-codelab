/*
    author: AmazingCaddy
    time: 2011/5/21  18:10
*/
#include <iostream>
#include <complex>
#include <algorithm>
#include <vector>
#include <string>
#include <cmath>
#include <map>
#include <queue>
#include <stack>
#include <cstdio>
#include <cstdlib>
#include <cstring>
using namespace std;
const int maxn = 10000;
bool vis[ maxn ];
int p[ maxn ];
int plen;
const int num[ ][ 2 ] = {
{ 0, 0 },
{ 2, 3 },
{ 3, 5 },
{ 0, 0 },
{ 7, 11 },
{ 0, 0 },
{ 23, 29 },
{ 0, 0 },
{ 89, 97 },
{ 0, 0 },
{ 139, 149 },
{ 0, 0 },
{ 199, 211 },
{ 0, 0 },
{ 113, 127 },
{ 0, 0 },
{ 1831, 1847 },
{ 0, 0 },
{ 523, 541 },
{ 0, 0 },
{ 887, 907 },
{ 0, 0 },
{ 1129, 1151 },
{ 0, 0 },
{ 1669, 1693 },
{ 0, 0 },
{ 2477, 2503 },
{ 0, 0 },
{ 2971, 2999 },
{ 0, 0 },
{ 4297, 4327 },
{ 0, 0 },
{ 5591, 5623 },
{ 0, 0 },
{ 1327, 1361 },
{ 0, 0 },
{ 9551, 9587 },
{ 0, 0 },
{ 30593, 30631 },
{ 0, 0 },
{ 19333, 19373 },
{ 0, 0 },
{ 16141, 16183 },
{ 0, 0 },
{ 15683, 15727 },
{ 0, 0 },
{ 81463, 81509 },
{ 0, 0 },
{ 28229, 28277 },
{ 0, 0 },
{ 31907, 31957 },
{ 0, 0 },
{ 19609, 19661 },
{ 0, 0 },
{ 35617, 35671 },
{ 0, 0 },
{ 82073, 82129 },
{ 0, 0 },
{ 44293, 44351 },
{ 0, 0 },
{ 43331, 43391 },
{ 0, 0 },
{ 34061, 34123 },
{ 0, 0 },
{ 89689, 89753 },
{ 0, 0 },
{ 162143, 162209 },
{ 0, 0 },
{ 134513, 134581 },
{ 0, 0 },
{ 173359, 173429 },
{ 0, 0 },
{ 31397, 31469 },
{ 0, 0 },
{ 404597, 404671 },
{ 0, 0 },
{ 212701, 212777 },
{ 0, 0 },
{ 188029, 188107 },
{ 0, 0 },
{ 542603, 542683 },
{ 0, 0 },
{ 265621, 265703 },
{ 0, 0 },
{ 461717, 461801 },
{ 0, 0 },
{ 155921, 156007 },
{ 0, 0 },
{ 544279, 544367 },
{ 0, 0 },
{ 404851, 404941 },
{ 0, 0 },
{ 927869, 927961 },
{ 0, 0 },
{ 1100977, 1101071 },
{ 0, 0 },
{ 360653, 360749 },
{ 0, 0 },
{ 604073, 604171 },
{ 0, 0 },
{ 396733, 396833 },
{ 0, 0 },
{ 1444309, 1444411 },
{ 0, 0 },
{ 1388483, 1388587 },
{ 0, 0 },
{ 1098847, 1098953 },
{ 0, 0 },
{ 2238823, 2238931 },
{ 0, 0 },
{ 1468277, 1468387 },
{ 0, 0 },
{ 370261, 370373 },
{ 0, 0 },
{ 492113, 492227 },
{ 0, 0 },
{ 5845193, 5845309 },
{ 0, 0 },
{ 1349533, 1349651 },
{ 0, 0 },
{ 1895359, 1895479 },
{ 0, 0 },
{ 3117299, 3117421 },
{ 0, 0 },
{ 6752623, 6752747 },
{ 0, 0 },
{ 1671781, 1671907 },
{ 0, 0 },
{ 3851459, 3851587 },
{ 0, 0 },
{ 5518687, 5518817 },
{ 0, 0 },
{ 1357201, 1357333 },
{ 0, 0 },
{ 6958667, 6958801 },
{ 0, 0 },
{ 6371401, 6371537 },
{ 0, 0 },
{ 3826019, 3826157 },
{ 0, 0 },
{ 7621259, 7621399 },
{ 0, 0 },
{ 10343761, 10343903 },
{ 0, 0 },
{ 11981443, 11981587 },
{ 0, 0 },
{ 6034247, 6034393 },
{ 0, 0 },
{ 2010733, 2010881 },
{ 0, 0 } 
};

void prime( )
{
	int i, j, k;
	memset( vis, false, sizeof( vis ) );
	plen = 0;
	for( vis[ 0 ] = vis[ 1 ] = true, i = 2, k = 4; i < maxn; ++i, k += i + i - 1 )
	{
		if( !vis[ i ] )
		{
			p[ plen++ ] = i;
			if( k < maxn ) for( j = k; j < maxn; j += i ) vis[ j ] = true;
		}
	}
}

int main( int ac, char * av[ ] )
{
	int A, B;
	prime( );
	int cas;
	scanf( "%d", &cas );
	for( int t = 1; t <= cas; t++ )
	{
		scanf( "%d%d", &A, &B );
		if( A > B ) swap( A, B );
		int tmp = B - A;
			printf( "Case %d: ", t );
		if( tmp == 0 )
		{
			printf( "-1\n" );
		}
		else if( tmp == 1 )
		{
			if( A > 2 ) printf( "-1\n" );
			else printf( "%d\n", 2 - A );
		}
		else if( tmp % 2 == 1 ) printf( "-1\n" );
		else
		{
			if( tmp <= 16 )
			{
				for( int j = 0; j < plen - 1; j++ )
				{
					if( p[ j ] >= A && ( p[ j + 1 ] - B == p[ j ] - A ) )
					{
						printf( "%d\n", p[ j ] - A );
						break;
					}
				}		
			}
			else
			{
				printf( "%d\n", num[ tmp ][ 0 ] - A );
			}
		}
	}
	return 0;
}
